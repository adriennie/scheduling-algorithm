#include <stdio.h>
//swapping function for sorting
void swap(int *a, int *b)
{
    int temp = *a;
    *a = *b;
    *b = temp;
}
//bubble sort 
void sort(int n, int bt[], int at[], int p[])
{
    for (int i = 0; i < n - 1; i++) 
    {
        for (int j = 0; j < n - i - 1; j++) 
        {
            if (at[j] > at[j + 1]) 
            {
                swap(&at[j], &at[j + 1]);
                swap(&bt[j], &bt[j + 1]);
                swap(&p[j], &p[j + 1]);
            }
        }
    }
}

//for finding wating time 
void WT(int n, int bt[], int wt[]) 
{
    wt[0] = 0;
    for (int i = 1; i < n; i++) 
    {
        wt[i] = bt[i - 1] + wt[i - 1];
    }
}

//for finding turn around time 
void TAT(int n, int bt[], int wt[], int tat[]) 
{
    for (int i = 0; i < n; i++) 
    {
        tat[i] = bt[i] + wt[i];
    }
}

int main() 
{
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    int bt[n], at[n], p[n], wt[n], tat[n];

    printf("Enter arrival time and burst time for each process:\n");
    for (int i = 0; i < n; i++)
    {
        printf("Process %d:\n", i + 1);
        printf("Arrival Time: ");
        scanf("%d", &at[i]);
        printf("Burst Time: ");
        scanf("%d", &bt[i]);
        p[i] = i + 1;       // Process ID
    }

    // Sort processes by arrival time
    sort(n, bt, at, p);     //it will be swapping all of them AT, BT & Process

    // Calculate WT and TAT
    WT(n, bt, wt);
    TAT(n, bt, wt, tat);

    // Calculate average waiting time and turnaround time
    float avg_wt = 0, avg_tat = 0;
    for (int i = 0; i < n; i++)
    {
        avg_wt += wt[i];
        avg_tat += tat[i];
    }
    avg_wt /= n;
    avg_tat /= n;

    printf("\nProcess\tArrival Time\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++)
    {
        printf("P%d\t%d\t\t%d\t\t%d\t\t%d\n", p[i], at[i], bt[i], wt[i], tat[i]);
    }

    printf("\nAverage Waiting Time: %.2f\n", avg_wt);
    printf("Average Turnaround Time: %.2f\n", avg_tat);

    return 0;
}
